{"version":3,"sources":["StMuiMultiselect.tsx","index.tsx"],"names":["StMuiMultiselect","state","selectedOptions","render","options","props","args","Select","labelId","id","multiple","native","value","onChange","inputProps","size","disabled","map","option","key","event","target","i","l","length","selected","push","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"oPAYMA,E,4MACGC,MAAQ,CAAEC,gBAAiB,I,EAG3BC,OAAS,WACd,IAAMC,EAAoB,EAAKC,MAAMC,KAAX,QAE1B,OACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,8BACRC,GAAG,wBACHC,UAAQ,EACRC,QAAM,EACNC,MAAO,EAAKX,MAAMC,gBAClBW,SAAU,EAAKA,SACfC,WAAY,CACVL,GAAI,yBACJM,KAAM,EAAKV,MAAMC,KAAX,MAERU,SAAU,EAAKX,MAAMW,UAEpBZ,EAAQa,KAAI,SAACC,GAAD,OACX,4BAAQC,IAAKD,EAAQN,MAAOM,GACzBA,Q,EAQHL,SAAW,SAACO,GAGlB,IAFA,IAAQhB,EAAYgB,EAAMC,OAAlBjB,QACFQ,EAAkB,GACfU,EAAI,EAAGC,EAAInB,EAAQoB,OAAQF,EAAIC,EAAGD,GAAK,EAC1ClB,EAAQkB,GAAGG,UACbb,EAAMc,KAAKtB,EAAQkB,GAAGV,OAG1B,EAAKe,UACD,SAAAC,GAAS,MAAK,CAAE1B,gBAAiBU,MACjC,kBAAMiB,IAAUC,kBAAkB,EAAK7B,MAAMC,qB,yBAzCtB6B,KA8ChBC,cAAwBhC,GCtDvCiC,IAAS9B,OACP,kBAAC,IAAM+B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.73032e85.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Select from '@material-ui/core/Select';\n\ninterface State {\n  selectedOptions: string[]\n}\n\nclass StMuiMultiselect extends StreamlitComponentBase<State> {\n  public state = { selectedOptions: [] }\n\n  /** Method for rendering the component */\n  public render = (): ReactNode => {\n    const options: string[] = this.props.args[\"options\"]\n\n    return (\n      <Select\n        labelId=\"demo-mutiple-checkbox-label\"\n        id=\"demo-mutiple-checkbox\"\n        multiple\n        native\n        value={this.state.selectedOptions}\n        onChange={this.onChange}\n        inputProps={{\n          id: 'select-multiple-native',\n          size: this.props.args[\"size\"]\n        }}\n        disabled={this.props.disabled}\n      >\n        {options.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </Select>\n    )\n  }\n\n  /** Called when user selects items. Update JS State as well as streamlit component state  */\n  private onChange = (event: any): void => {\n    const { options } = event.target as HTMLSelectElement;\n    const value: string[] = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    this.setState(\n        prevState => ({ selectedOptions: value }),\n        () => Streamlit.setComponentValue(this.state.selectedOptions)\n    )\n  }\n}\n\nexport default withStreamlitConnection(StMuiMultiselect)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StMuiMultiselect from \"./StMuiMultiselect\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StMuiMultiselect />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}
